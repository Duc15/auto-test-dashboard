import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import Border, Side
from datetime import datetime

def save_test_results(test_cases, results, file_name='test_result.xlsx'):
    records = []
    
    # L·∫•y th·ªùi gian hi·ªán t·∫°i (theo ƒë·ªãnh d·∫°ng YYYY-MM-DD HH:MM:SS)
    current_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # T·∫°o danh s√°ch c√°c b·∫£n ghi ki·ªÉm th·ª≠ ƒë·ªÉ l∆∞u v√†o Excel
    for case, result in zip(test_cases, results):
        record = {
            'api_name': case['api_name'],                    # T√™n API
            'method': case['method'],                        # Ph∆∞∆°ng th·ª©c HTTP (GET, POST, ...)
            'endpoint': case['endpoint'],                    # ƒê∆∞·ªùng d·∫´n API
            'request_body': case['request_body'],            # N·ªôi dung request g·ª≠i l√™n
            'expected_status': case['expected_status'],      # M√£ tr·∫°ng th√°i mong ƒë·ª£i
            'expected_response': case['expected_response'],  # K·∫øt qu·∫£ mong ƒë·ª£i
            'actual_response': result['actual_response'],    # K·∫øt qu·∫£ th·ª±c t·∫ø nh·∫≠n ƒë∆∞·ª£c
            'result': result['result'],                      # K·∫øt qu·∫£ ki·ªÉm th·ª≠ (Pass/Fail)
            'message': result['message']                     # Th√¥ng ƒëi·ªáp ho·∫∑c l√Ω do n·∫øu Fail
        }
        records.append(record)  # Th√™m b·∫£n ghi v√†o danh s√°ch

    # Chuy·ªÉn danh s√°ch b·∫£n ghi th√†nh DataFrame ƒë·ªÉ x·ª≠ l√Ω v·ªõi pandas
    df = pd.DataFrame(records)

    # D√πng ExcelWriter ƒë·ªÉ ghi d·ªØ li·ªáu v√†o file Excel
    with pd.ExcelWriter(file_name, engine='openpyxl') as writer:
        # Ghi DataFrame v√†o sheet "Test Results", kh√¥ng ghi c·ªôt index
        df.to_excel(writer, sheet_name='Test Results', index=False)

        # T·∫°o sheet "Summary" ch·ª©a t·ªïng quan k·∫øt qu·∫£ ki·ªÉm th·ª≠
        summary_data = {
            'Total Tests': [len(test_cases)],                       # T·ªïng s·ªë test case
            'Pass': [sum(1 for result in results if result['result'] == 'Pass')],  # S·ªë l∆∞·ª£ng Pass
            'Fail': [sum(1 for result in results if result['result'] == 'Fail')],  # S·ªë l∆∞·ª£ng Fail
            'Test Date': [current_date]                             # Ng√†y v√† gi·ªù ki·ªÉm th·ª≠
        }
        summary_df = pd.DataFrame(summary_data)
        summary_df.to_excel(writer, sheet_name='Summary', index=False)

    # M·ªü file Excel v·ª´a t·∫°o ƒë·ªÉ th√™m ƒë·ªãnh d·∫°ng (border)
    wb = load_workbook(file_name)
    ws = wb['Test Results']       # Sheet k·∫øt qu·∫£ chi ti·∫øt
    summary_ws = wb['Summary']    # Sheet t·ªïng quan

    # T·∫°o khung vi·ªÅn m·ªèng cho √¥ (thin border)
    thin_border = Border(
        top=Side(style='thin'),
        bottom=Side(style='thin'),
        left=Side(style='thin'),
        right=Side(style='thin')
    )

    # √Åp d·ª•ng border cho t·∫•t c·∫£ √¥ d·ªØ li·ªáu trong sheet "Test Results"
    for row in ws.iter_rows(min_row=2, max_row=len(df) + 1, min_col=1, max_col=len(df.columns)):
        for cell in row:
            cell.border = thin_border

    # √Åp d·ª•ng border cho t·∫•t c·∫£ √¥ d·ªØ li·ªáu trong sheet "Summary"
    for row in summary_ws.iter_rows(min_row=2, max_row=2, min_col=1, max_col=len(summary_data)):
        for cell in row:
            cell.border = thin_border

    # L∆∞u l·∫°i workbook sau khi ƒë√£ th√™m border
    wb.save(file_name)
    
    # In ra th√¥ng b√°o ƒë√£ l∆∞u file
    print(f"üìÅ ƒê√£ l∆∞u k·∫øt qu·∫£ test v√†o: {file_name}")
